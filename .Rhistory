stat_dotsinterval(side = "bottom", scale = 0.5, slab_size = NA) #+
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab() +
stat_dotsinterval(side = "bottom", scale = 0.5, slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab() +
stat_dotsinterval()
# Set custom color scheme
custom_palette <- c("setosa" = "#98c1d9", "versicolor" = "#293241","virginica" = "#ee6c4d")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "",
y = "") +
theme_minimal(base_size = 15) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"),
axis.text = element_text(size = 20))
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "",
y = "") +
theme_minimal(base_size = 12) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"),
axis.text = element_text(size = 20))
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 12) +
#coord_flip()+
theme(legend.position = "none"))
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 12) +
#coord_flip()+
theme(legend.position = "none"))
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 12) +
#coord_flip()+
theme(legend.position = "none")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 13) +
#coord_flip()+
theme(legend.position = "none")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 20) +
#coord_flip()+
theme(legend.position = "none")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.x = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.x = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.minor.x = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
# Change orientation using coord_flip()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.3, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.2, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.8, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
install.packages("introdataviz")
install.packages("raincloudplots")
library(devtools)
remotes::install_github('jorvlan/raincloudplots')
devtools::install_github("psyteachr/introdataviz")
library(introdataviz)
install.packages("PupillometryR")
# Set custom color scheme
custom_palette <- c("setosa" = "#98c1d9", "versicolor" = "#293241","virginica" = "#ee6c4d")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab() +
stat_dotsinterval()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab() +
stat_dotsinterval()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab() +
stat_dotsinterval()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_eye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = "dodge")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_eye(position = "dodge")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = "dodge")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_slab()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye()
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye() +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
stat_halfeye(position = position_dodge(width = .4, preserve = "single") +
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = "dodge") +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = "dodge") +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye() +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = "dodgejust") +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = position_dodge(width = 0.3)) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species)) +
stat_halfeye(position = position_dodge(width = 10)) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA)
#### ---- Load packages ---- ####
library(tidyverse)
library(scales)
library(janitor)
library(viridis)
library(gridExtra)
library(cowplot)
library(ggpubr)
library(gridGraphics)
library(patchwork)
library(ggsci)
library(hrbrthemes)
library(ggsignif)
library(ggdist)
library(ggtext)
#### ---- Load data ---- ####
X <- readRDS(file = "data/CCA_Xvars.rds")
Y <- readRDS(file = "data/CCA_Yvars.rds")
cca_df <- readRDS("data/cca_df.rds")
cca_df <- cca_df %>%
mutate(diag_group = factor(diag_group, levels = c("SZ", "BD", "HC")))
### Raincloud  - Alternative to violin, then skip distribution on scatterplot
col_palette <- c("SZ" = "#023047", "BD" = "#ffb703","HC" = "#868686")
col_palette <- c("SZ" = "#00537a", "BD" = "#ffb703","HC" = "#868686")
P4 <- ggplot(cca_df, aes(x=mode1_X, y=diag_group, fill=diag_group))+
stat_slab(aes(thickness = stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
#scale_fill_brewer(palette = "Set2") +
scale_fill_manual(values = col_palette) +
scale_color_manual(values = col_palette) +
geom_signif(comparisons = list(c("SZ", "HC")), map_signif_level = TRUE,
y_position = 2.5, size = 0.8, textsize = 6) +
geom_signif(comparisons = list(c("BD", "HC")), map_signif_level = TRUE,
y_position = 3.3, size = 0.8, textsize = 6) +
xlim(-3, 4)+
labs(title="Cognitive loadings",
x = "",
y = "") +
theme_minimal() +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank(),
plot.title = element_text(size = 20, hjust = 0.5, face = "bold"),
axis.text = element_text(size = 20))
P4
# Fix overlap of clouds
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
# Fix overlap of clouds
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
# Fix overlap of clouds
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
# Set custom color scheme
custom_palette <- c("setosa" = "#98c1d9", "versicolor" = "#293241","virginica" = "#ee6c4d")
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = after_stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
ggplot(iris, aes(x = Sepal.Width, y = Species, fill = Species))+
stat_slab(aes(thickness = stat(pdf*n)),
scale = 0.7, alpha = 0.8) +
stat_dotsinterval(side = "bottom",
scale = 0.7,
slab_size = NA) +
scale_fill_manual(values = custom_palette) +
scale_color_manual(values = custom_palette) +
labs(title="",
x = "Sepal width (in cm)",
y = "") +
theme_minimal(base_size = 14) +
#coord_flip()+
theme(legend.position = "none",
panel.grid.major.y = element_blank())
